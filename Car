using System;

namespace CarSimulation
{
    // Peri GÃ¼ven 2305041010

    // Fuel Types
    public enum FuelType
    {
        Gasoline,
        Diesel,
        Electric,
        Hybrid
    }

    // Drivetrain Types
    public enum Drivetrain
    {
        FrontWheelDrive,
        RearWheelDrive,
        AllWheelDrive
    }

    // Engine Class
    public class Engine
    {
        public int Horsepower { get; private set; }
        public double Displacement { get; private set; } // Liters

        public Engine(int horsepower, double displacement)
        {
            Horsepower = horsepower;
            Displacement = displacement;
        }

        public void Start()
        {
            Console.WriteLine("The engine roars to life!");
        }

        public void Stop()
        {
            Console.WriteLine("The engine has been turned off.");
        }
    }

    // Fuel Tank Class
    public class FuelTank
    {
        public FuelType Fuel { get; private set; }
        public double Capacity { get; private set; } // Liters
        public double CurrentLevel { get; private set; }

        public FuelTank(FuelType fuel, double capacity)
        {
            Fuel = fuel;
            Capacity = capacity;
            CurrentLevel = capacity; // Assume a full tank at initialization
        }

        public void Consume(double fuelAmount)
        {
            if (fuelAmount <= 0)
            {
                Console.WriteLine("Invalid fuel consumption value!");
                return;
            }

            if (CurrentLevel >= fuelAmount)
            {
                CurrentLevel -= fuelAmount;
                Console.WriteLine($"Used {fuelAmount}L of fuel. Remaining: {CurrentLevel}L.");
            }
            else
            {
                Console.WriteLine("Insufficient fuel to proceed!");
            }
        }
    }

    // Transmission Class
    public class Transmission
    {
        public string Type { get; private set; } // Automatic or Manual
        public int Gears { get; private set; }

        public Transmission(string type, int gears)
        {
            Type = type;
            Gears = gears;
        }

        public void ShiftGear(int gear)
        {
            if (gear > 0 && gear <= Gears)
            {
                Console.WriteLine($"Shifted to gear {gear}. Smooth driving ahead!");
            }
            else
            {
                Console.WriteLine("Gear shift failed: Invalid gear selection.");
            }
        }
    }

    // Chassis Class
    public class Chassis
    {
        public string BodyType { get; private set; }
        public string Color { get; private set; }

        public Chassis(string bodyType, string color)
        {
            BodyType = bodyType;
            Color = color;
        }

        public void Paint(string newColor)
        {
            Color = newColor;
            Console.WriteLine($"The car is now painted {Color}. Looks brand new!");
        }
    }

    // Car Class
    public class Car
    {
        public string Model { get; private set; }
        public Engine Engine { get; private set; }
        public FuelTank FuelTank { get; private set; }
        public Transmission Transmission { get; private set; }
        public Chassis Chassis { get; private set; }
        public Drivetrain Drivetrain { get; private set; }

        public Car(string model, Engine engine, FuelTank fuelTank, Transmission transmission, Chassis chassis, Drivetrain drivetrain)
        {
            Model = model;
            Engine = engine;
            FuelTank = fuelTank;
            Transmission = transmission;
            Chassis = chassis;
            Drivetrain = drivetrain;
        }

        public void Drive()
        {
            Console.WriteLine($"The {Model} is hitting the road!");
            Engine.Start();
            FuelTank.Consume(5); // Simulate fuel consumption
        }

        public void Park()
        {
            Console.WriteLine($"The {Model} is now parked safely.");
            Engine.Stop();
        }
    }

    // Main Program
    class Program
    {
        static void Main(string[] args)
        {
            // Define Components
            var engine = new Engine(200, 2.0);
            var fuelTank = new FuelTank(FuelType.Gasoline, 50);
            var transmission = new Transmission("Automatic", 6);
            var chassis = new Chassis("Sedan", "Blue");

            // Create a Car Instance
            var car = new Car("Honda Accord", engine, fuelTank, transmission, chassis, Drivetrain.FrontWheelDrive);

            // Simulate Driving
            car.Drive();
            car.Transmission.ShiftGear(4);
            car.Park();
        }
    }
}
